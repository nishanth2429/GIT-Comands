to install github in ubuntu:

curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo gpg --dearmor -o /usr/share/keyrings/githubcli-archive-keyring.gpg
echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
sudo apt update
sudo apt install gh


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


To install GIT in Linux:
#yum install git
yes
Git is instalaton is done

#Afterward we need to config to GITHUB Account The code is attached by an immage.



gitid:nishanth2429
pass:Nishanth@242900
email:nishanthd383@gmail.com

#git config --global user.name "nishanth2429"

#git config --global user.email "nishanthd383@gmail.com"

#git config --global core.editor vim

#git config --global core.compression 2

#git config --global diff.tool vim.diff

To list : git config -l



#git remote add origin https://github.com/nishanth2429/Promethius-and-Graffana.git
#git pull orgin main -f
#git config -l ====>It is show the config histoy
#git remote add origin https://github.com/nishanth2429/Terraform.git
#mkdir mygit ====>it will create an working Directory
#cd mygit
#git init ====>it will create an local repositery
#vi sample
#git add sample =====>Moving to working directory to staging area
#git commit -m "1st" =====> To staging arrea to local repo
#git commit -am "2nd"======>without moaving staging area to directly to the local repo
#git diff =====> difference between working directoy to stagging area
#git diff --staged ====> difference between staging area to local repo
#git log --oneline ====> it will show the log of commit
#git blame sample(filename) ====>it will show the information about the line by line file
#git show 5748bfh(commit id) ====>it will show the particular commit id information
#git branch =====>it will show in which branch currently we are in.
#git branch dev(feature branch name)====>it will create an feature branch 
#git checkout dev, #git checkout master ====>it will switch over to one branch to another branch.
#git merge dev ====>it merge the date master to dev
#git rebase master ====>it is rebase feature
#git cherry-pick eu6968(commit id) ====>it's cheery pick comment
#git pull http://uhje8575hv(paste link of repostery)
#git clone http://uhje8575hv(paste link of repostery) 
#git commit --amend ===>Changing the Last Commit: 


feature ---> develop (non-prod:dev,qa)
develop ---> rc(non-prod: uat)
 
rc ----> master(prod)
 
defect ---> hotfix(prod)
 
hotfix ---> master(prod)
